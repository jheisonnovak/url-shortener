version: "3.8"

services:
    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            - RABBITMQ_DEFAULT_USER=user
            - RABBITMQ_DEFAULT_PASS=password
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        networks:
            - microservices_network
        healthcheck:
            test: ["CMD", "rabbitmqctl", "status"]
            interval: 10s
            timeout: 5s
            retries: 5

    postgres:
        image: postgres:14
        container_name: postgres
        ports:
            - "5434:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data
            - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
        networks:
            - microservices_network
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin
        depends_on:
            - postgres
        ports:
            - "5050:80"
        environment:
            - PGADMIN_DEFAULT_EMAIL=admin@admin.com
            - PGADMIN_DEFAULT_PASSWORD=admin
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        networks:
            - microservices_network

    auth-service:
        build:
            context: .
            dockerfile: apps/auth-service/Dockerfile
        container_name: auth-service
        env_file:
            - .env
        depends_on:
            - postgres
            - rabbitmq
        networks:
            - microservices_network
        restart: unless-stopped
        command: sh -c "
            until nc -z postgres 5432; do
            echo 'Waiting for Postgres...';
            sleep 2;
            done;
            until nc -z rabbitmq 5672; do
            echo 'Waiting for RabbitMQ...';
            sleep 2;
            done;
            node dist/apps/auth-service/main
            "

    url-shortener:
        build:
            context: .
            dockerfile: apps/url-shortener/Dockerfile
        container_name: url-shortener
        env_file:
            - .env
        depends_on:
            - postgres
            - rabbitmq
        networks:
            - microservices_network
        restart: unless-stopped
        command: sh -c "
            until nc -z postgres 5432; do
            echo 'Waiting for Postgres...';
            sleep 2;
            done;
            until nc -z rabbitmq 5672; do
            echo 'Waiting for RabbitMQ...';
            sleep 2;
            done;
            node dist/apps/url-shortener/main
            "

    api-gateway:
        build:
            context: .
            dockerfile: apps/api-gateway/Dockerfile
        container_name: api-gateway
        env_file:
            - .env
        ports:
            - "2000:2000"
        depends_on:
            - auth-service
            - url-shortener
        networks:
            - microservices_network
        restart: unless-stopped
        command: sh -c "
            until nc -z postgres 5432; do
            echo 'Waiting for Postgres...';
            sleep 2;
            done;
            until nc -z rabbitmq 5672; do
            echo 'Waiting for RabbitMQ...';
            sleep 2;
            done;
            node dist/apps/api-gateway/main
            "

volumes:
    postgres_data:
    rabbitmq_data:
    pgadmin_data:

networks:
    microservices_network:
        driver: bridge
